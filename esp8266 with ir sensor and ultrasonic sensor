ESP8266 code
#define BLYNK_TEMPLATE_ID "Template ID"
#define BLYNK_TEMPLATE_NAME "Template ID"
#define BLYNK_AUTH_TOKEN "Auth Token"
#define BLYNK_PRINT Serial
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>
char auth[] = BLYNK_AUTH_TOKEN;
char ssid[] = "**********";
char pass[] = "**********";
BlynkTimer timer;
#define echoPin D5
#define trigPin D6
long duration;
int distance;
int binLevel = 0;
void SMESensor()
{
int ir = digitalRead(D7);
if(ir == HIGH)
{
for(int i = 0; i < 50; i++)
{
Blynk.virtualWrite(V2, 90); // This line can be modified or removed if not required
ultrasonic();
delay(100);
}
Blynk.virtualWrite(V2, 0); // This line can be modified or removed if not required
}
if(ir == LOW)
{
ultrasonic();
delay(200);
}
}
void ultrasonic()
{
digitalWrite(trigPin, LOW);
delayMicroseconds(2);
digitalWrite(trigPin, HIGH);
delayMicroseconds(10);
digitalWrite(trigPin, LOW);
duration = pulseIn(echoPin, HIGH);
distance = duration * 0.034 / 2; // Formula to calculate the distance for ultrasonic 
sensor
binLevel = map(distance, 21, 0, 0, 100); // ADJUST BIN HEIGHT HERE
Blynk.virtualWrite(V0, distance);
Blynk.virtualWrite(V1, binLevel);
}
void setup()
{
Serial.begin(9600);
pinMode(D7, INPUT);
pinMode(trigPin, OUTPUT);
pinMode(echoPin, INPUT);
Blynk.begin(auth, ssid, pass);
delay(2000);
timer.setInterval(1000L, SMESensor);
}
void loop()
{
Blynk.run();
timer.run();
}
